---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 5m
  chart:
    spec:
      chart: *app
      version: 2024.12.2
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    # notes: See https://github.com/goauthentik/helm/blob/main/charts/authentik/values.yaml
    global:
      # Default image used by all authentik components. For GeoIP configuration, see the geoip values below.
      image:
        repository: ${SECRET_HARBOR_URL}/authentik-server
        tag: 2024.12.2
      revisionHistoryLimit: 5
      # To prevent "Permission denied" on `/media/public` (see also https://github.com/goauthentik/authentik/issues/11041)
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      envFrom:
        - secretRef:
            name: authentik-secrets

    # Authentik configuration
    authentik:
      # -- Log level for server and worker
      log_level: info
      # -- Secret key used for cookie singing and unique user IDs, don't change this after the first install
      secret_key: ${SECRET_AUTHENTIK_SIGNING_KEY}
      error_reporting:
        enabled: true
      postgresql:
        host: authentik-cluster-rw.authentication-system.svc.cluster.local
        name: authentik_db
        user: ${SECRET_AUTHENTIK_PG_USER}
        password: ${SECRET_AUTHENTIK_PG_PASSWORD}
        port: 5432
      #--- Kubernetes outpost specific settings
      kubernetes_replicas: "1"
      kubernetes_namespace: authentication-system
      # Any additional annotations to add to the ingress object, for example cert-manager
      kubernetes_ingress_annotations:
        - kubernetes.io/ingress.class: traefik-external
      # Name of the secret that is used for TLS connections, leave empty to disable TLS
      kubernetes_ingress_secret_name: moerman-online-prod-tls
      kubernetes_service_type: ClusterIP
      # Disable any components of the kubernetes integration, can be any of
      # - 'secret'
      # - 'deployment'
      # - 'service'
      # - 'prometheus servicemonitor'
      # - 'ingress'
      # - 'traefik middleware'
      # kubernetes_disabled_components: []
      # Optionally configure an ingress class name. If not set, the ingress will use the cluster's default ingress class
      # Applies to: proxy outposts
      kubernetes_ingress_class_name: traefik-external
      env: []

    # blueprints:
    #   # -- List of config maps to mount blueprints from.
    #   # Only keys in the configMap ending with `.yaml` will be discovered and applied.
    #   configMaps: []
    #   # -- List of secrets to mount blueprints from.
    #   # Only keys in the secret ending with `.yaml` will be discovered and applied.
    #   secrets: []

    # Authentik server
    server:
      name: authserver
      # replicas: 1
      containerPorts:
        http: 9000
        https: 9443
        metrics: 9300
      ingress:
        enabled: false
      # metrics:
      #   enabled: true
      #   serviceMonitor:
      #     enabled: true
      env: []

    # AUthentik worker
    worker:
      name: authworker
      image:
        repository: ${SECRET_HARBOR_URL}/authentik-server
        tag: 2024.12.2
      # replicas: 1
      volumeMounts:
        - name: authentik-media
          mountPath: /media
      volumes:
        - name: authentik-media
          persistentVolumeClaim:
            claimName: authentik-media
      # resources:
        # requests:
        #   cpu: 100m
        #   memory: 512Mi
        # limits:
        #   memory: 1024Mi
        #   cpu: 500m
      env: []

    # ingress:
    #   enabled: false
    #   ingressClassName: "traefik-external"
    #   annotations: {
    #     traefik.ingress.kubernetes.io/router.entrypoints: websecure
    #   }
    #   labels: {}
    #   hosts:
    #     - host: <censored my domain>
    #       paths:
    #         - path: "/"
    #           pathType: Prefix
    #   tls: []

    # geoip:
    #   enabled: false

    postgresql:
      enabled: false

    # redis:
    #   enabled: true
    #   architecture: standalone
    #   auth:
    #     enabled: false

    # prometheus:
    #   rules:
    #     enabled: true
    #     namespace: monitoring-system
    #     selector: {}
    #       # prometheus: kube-prometheus-stack-prometheus
    #     labels: {}
    #     annotations: {}